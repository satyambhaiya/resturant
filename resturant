import tkinter as tk
from tkinter import ttk, messagebox
from sql_project import RestaurantManagementSystem

class RestaurantGUI:
    def __init__(self, master):
        self.master = master
        self.master.title("Restaurant Management System")
        self.rms = RestaurantManagementSystem()

        self.notebook = ttk.Notebook(self.master)
        self.notebook.pack(fill=tk.BOTH, expand=True)

        self.create_add_item_tab()
        self.create_view_menu_tab()
        self.create_create_order_tab()

    def create_add_item_tab(self):
        add_item_frame = ttk.Frame(self.notebook)
        self.notebook.add(add_item_frame, text="Add Item")

        ttk.Label(add_item_frame, text="Name:").grid(row=0, column=0, padx=5, pady=5)
        self.name_entry = ttk.Entry(add_item_frame)
        self.name_entry.grid(row=0, column=1, padx=5, pady=5)

        ttk.Label(add_item_frame, text="Price:").grid(row=1, column=0, padx=5, pady=5)
        self.price_entry = ttk.Entry(add_item_frame)
        self.price_entry.grid(row=1, column=1, padx=5, pady=5)

        ttk.Label(add_item_frame, text="Category:").grid(row=2, column=0, padx=5, pady=5)
        self.category_entry = ttk.Entry(add_item_frame)
        self.category_entry.grid(row=2, column=1, padx=5, pady=5)

        ttk.Button(add_item_frame, text="Add Item", command=self.add_item).grid(row=3, column=0, columnspan=2, pady=10)

    def create_view_menu_tab(self):
        view_menu_frame = ttk.Frame(self.notebook)
        self.notebook.add(view_menu_frame, text="View Menu")

        self.menu_tree = ttk.Treeview(view_menu_frame, columns=("Name", "Price", "Category"), show="headings")
        self.menu_tree.heading("Name", text="Name")
        self.menu_tree.heading("Price", text="Price")
        self.menu_tree.heading("Category", text="Category")
        self.menu_tree.pack(fill=tk.BOTH, expand=True)

        ttk.Button(view_menu_frame, text="Refresh Menu", command=self.refresh_menu).pack(pady=10)

    def create_create_order_tab(self):
        create_order_frame = ttk.Frame(self.notebook)
        self.notebook.add(create_order_frame, text="Create Order")

        ttk.Label(create_order_frame, text="Customer Name:").grid(row=0, column=0, padx=5, pady=5)
        self.customer_name_entry = ttk.Entry(create_order_frame)
        self.customer_name_entry.grid(row=0, column=1, padx=5, pady=5)

        ttk.Label(create_order_frame, text="Items (id,quantity):").grid(row=1, column=0, padx=5, pady=5)
        self.order_items_entry = ttk.Entry(create_order_frame)
        self.order_items_entry.grid(row=1, column=1, padx=5, pady=5)

        ttk.Button(create_order_frame, text="Create Order", command=self.create_order).grid(row=2, column=0, columnspan=2, pady=10)

    def add_item(self):
        name = self.name_entry.get()
        price = float(self.price_entry.get())
        category = self.category_entry.get()
        self.rms.add_menu_item(name, price, category)
        messagebox.showinfo("Success", "Item added successfully!")
        self.name_entry.delete(0, tk.END)
        self.price_entry.delete(0, tk.END)
        self.category_entry.delete(0, tk.END)

    def refresh_menu(self):
        self.menu_tree.delete(*self.menu_tree.get_children())
        menu = self.rms.get_menu()
        for item in menu:
            self.menu_tree.insert("", "end", values=(item[1], f"${item[2]:.2f}", item[3]))

    def create_order(self):
        customer_name = self.customer_name_entry.get()
        items_str = self.order_items_entry.get()
        
        # Add customer
        self.rms.add_customer(customer_name, "", "")
        customer_id = self.rms.cursor.lastrowid

        # Parse items
        items = []
        for item in items_str.split(';'):
            id, quantity = map(int, item.split(','))
            items.append((id, quantity))

        # Create order
        self.rms.create_order(customer_id, items)
        messagebox.showinfo("Success", "Order created successfully!")
        self.customer_name_entry.delete(0, tk.END)
        self.order_items_entry.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = RestaurantGUI(root)
    root.mainloop()
